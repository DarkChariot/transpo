name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Deploy to server
      id: deploy
      run: |
        echo "Deploying to server..."
        # Add your deployment script or commands here
        echo "Deployment URL: https://example.com"  # Replace with actual deployment URL
        echo "::set-output name=deployment-url::https://example.com"

    - name: Notify deployment success
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"Deployment successful! Check it out: https://example.com"}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Post-deployment health check
      run: |
        curl --fail https://example.com/health-check || exit 1
